@ARTICLE{circle,
    author = {Christophe De Canniere and Bart Preneel},
    title = {TRIVIUM Specifications},
    journal = {eSTREAM, ECRYPT Stream Cipher Project},
    year = {2006},
}

@article{gauss,
    title = "Matrix multiplication via arithmetic progressions",
    journal = "Journal of Symbolic Computation",
    volume = "9",
    number = "3",
    pages = "251 - 280",
    year = "1990",
    note = "Computational algebraic complexity editorial",
    issn = "0747-7171",
    doi = "https://doi.org/10.1016/S0747-7171(08)80013-2",
    url = "http://www.sciencedirect.com/science/article/pii/S0747717108800132",
    author = "Don Coppersmith and Shmuel Winograd",
    abstract = "We present a new method for accelerating matrix multiplication asymptotically. Thiswork builds on recent ideas of Volker Strassen, by using a basic trilinear form which is not a matrix product. We make novel use of the Salem-Spencer Theorem, which gives a fairly dense set of integers with no three-term arithmetic progression. Our resulting matrix exponent is 2.376."
}

@misc{call,
    title = {ECRYPT Call for Stream Cipher Primitives},
    author = {ECRYPT},
    url = {http://www.ecrypt.eu.org/stream/call/},
    year = {2005}
}

@TECHREPORT{block-insp,
author = {Christophe De Cannière and Bart Preneel},
title = {Trivium - A Stream Cipher Construction Inspired by Block Cipher Design Principles. eSTREAM, ECRYPT Stream Cipher},
year = {2005},
institution = {}
}

@misc{iot,
title = {Ericsson Mobility Report},
author = {Ericsson},
year = {2018},
url = {https://www.ericsson.com/49d1d9/assets/local/mobility-report/documents/2018/ericsson-mobility-report-june-2018.pdf}
}

@book{book,
 editor = {Robshaw, Matthew and Billet, Olivier},
 title = {New Stream Cipher Designs: The eSTREAM Finalists},
 year = {2008},
 isbn = {978-3-540-68350-6},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@article{massey,
abstract = {It is shown in this paper that the iterative algorithm introduced by Berlekamp for decoding BCH codes actually provides a general solution to the problem of synthesizing the shortest linear feedback shift register capable of generating a prescribed finite sequence of digits. The shift-register approach leads to a simple proof of the validity of the algorithm as well as providing additional insight into its properties. The equivalence of the decoding problem for BCH codes to a shift-register synthesis problem is demonstrated, and other applications for the algorithm are suggested. {\textcopyright} 1969, IEEE. All Rights Reserved.},
author = {Massey, James L.},
doi = {10.1109/TIT.1969.1054260},
issn = {15579654},
journal = {IEEE Transactions on Information Theory},
number = {1},
pages = {122--127},
title = {{Shift-Register Synthesis and BCH Decoding}},
volume = {15},
year = {1969}
}

@article{Hu2012,
abstract = {As a hardware-oriented stream cipher, Trivium is on the edge of low cost and compactness. In this paper we discuss how brittle Trivium is under fault attack. Our fault model is based on the following two assumptions: (1)We can make fault injection on the state at a random time and (2) after each fault injection, the fault positions are from random one of three registers, and from a random area within eight neighboring bits. Our fault model has extremely weak assumptions for effective attack , and much weaker than that of Hojs{\'{i}}k and Rudolf, in their fault attack on Trivium.We present a checkingmethod such that, by observing original key-stream segment and fault injected key-stream segment, the injecting time and fault positions can be determined. Then, for several distributions of the injecting time, our random simulations always show that the attacker can break Trivium by a small number of repeated fault injections. For example, suppose that the injecting time has an uniform distribution over {\{}0, 1, ⋯ , 32{\}}, then averagely no more than 16 repeated fault injection procedures will break Trivium, by averagely observing no more than 195 × 17 key-stream bits. {\textcopyright} Springer Science+Business Media, LLC 2011.},
author = {Hu, Yupu and Gao, Juntao and Liu, Qing and Zhang, Yiwei},
doi = {10.1007/s10623-011-9518-9},
issn = {09251022},
journal = {Designs, Codes, and Cryptography},
keywords = {Fault analysis,Side-channel attack,Stream cipher,Trivium},
month = {mar},
number = {3},
pages = {289--311},
publisher = {Springer US},
title = {{Fault analysis of Trivium}},
url = {http://link.springer.com/10.1007/s10623-011-9518-9},
volume = {62},
year = {2012}
}
@misc{,
annote = {More info on trivium!
Written by the authors of Trivium.
},
title = {article-850}
}
@article{Dubrova,
annote = {Elena's paper - describes Fault Injection attack.},
author = {Dubrova, Elena},
title = {{Breaking ACORN with a Single Fault}}
}
@article{Rohani2010,
annote = {Guess and Determine Attack on Trivium and Bivium.},
author = {Rohani, Neda and Noferesti, Zainab and Mohajeri, Javad and Aref, Mohammad Reza},
doi = {10.1109/EUC.2010.123},
isbn = {9780769543222},
journal = {Proceedings - IEEE/IFIP International Conference on Embedded and Ubiquitous Computing, EUC 2010},
keywords = {Bivium,Guess and determine attack,Linear approximations,Stream ciphers,Trivium},
pages = {785--790},
title = {{Guess and determine attack on trivium family}},
year = {2010}
}
@book{Ciphers2007,
annote = {General info on stream ciphers.},
author = {Hell, Martin},
isbn = {9171670432},
pages = {1--15},
title = {{On the Design and Analysis of Stream Ciphers}},
year = {2007}
}
@article{Ahmadi,
annote = {This paper describes a guess and determine attack with a guess based on assuming a specific value in one term of the recurrence relation expression.},
author = {Ahmadi, Hadi and Eghlidos, Taraneh and Khazaei, Shahram},
number = {Iv},
pages = {2--9},
title = {{Improved Guess and Determine Attack on}}
}
@article{Hawkes2003,
abstract = {This paper describes guess and determine attacks on the stream cipher SNOW. The first attack has a data complexity of O(2{\^{}}64) and a process complexity of O(2{\^{}}224) and data complexity of O(2{\^{}}95)},
annote = {GD attack on SNOW.
Recommended by Martin Hell.},
author = {Hawkes, Philip and Rose, Gregory G.},
issn = {03029743},
journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
pages = {37--46},
title = {{Guess-and-determine attacks on SNOW}},
volume = {2595},
year = {2003}
}
@article{Hojsik2008,
abstract = {Trivium is a hardware-oriented stream cipher designed in 2005 by de Canniere and Preneel for the European project eStream, and it has successfully passed the first and the second phase of this project. Its design has a simple and elegant structure. Although Trivium has attached a lot of interest, it remains unbroken. In this paper we present differential fault analysis of Trivium and propose two attacks on Trivium using fault injection. We suppose that an attacker can corrupt exactly one random bit of the inner state and that he can do this many times for the same inner state. This can be achieved e.g. in the CCA scenario. During experimental simulations, having inserted 43 faults at random positions, we were able to disclose the trivium inner state and afterwards the private key. As far as we know, this is the first time differential fault analysis is applied to a stream cipher based on shift register with non-linear feedback.},
annote = {This has a nice diagram},
author = {Hojs{\'{i}}k, Michal and Rudolf, Bohuslav},
doi = {10.1007/978-3-540-71039-4_10},
isbn = {3540710388},
issn = {03029743},
journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
keywords = {Differential fault analysis,Fault injection,Trivium stream cipher},
pages = {158--172},
title = {{Differential fault analysis of Trivium}},
volume = {5086 LNCS},
year = {2008}
}
@article{Swierczynski2015,
abstract = {This paper investigates a novel attack vector against cryptography realized on FPGAs, which poses a serious threat to real-world applications. We demonstrate how a targeted bitstream modification can seriously weaken cryptographic algorithms, which we show with the examples of AES and 3-DES. The attack is performed by modifying the FPGA bitstream that configures the hardware elements during initialization. Recently, it has been shown that cloning of FPGA designs is feasible, even if the bitstream is encrypted. However, due to its proprietary file format, a meaningful modification is challenging. While some previous work addressed bitstream reverse-engineering, so far it has not been evaluated how difficult it is to detect and modify cryptographic elements. We outline two possible practical attacks that have serious security implications. We target the S-boxes of block ciphers that can be implemented in look-up tables or stored as precomputed set of values in the memory of the FPGA. We demonstrate that it is possible to detect and apply meaningful changes to cryptographic elements inside an unknown, proprietary, and undocumented bitstream. Our proposed attack does not require any knowledge of the internal routing. Furthermore, we show how an AES key can be revealed within seconds. Finally, we discuss countermeasures that can raise the bar for an adversary to successfully perform this kind of attack.},
annote = {Elena especially recommended this paper in "Breaking ACORN...".
It shows a similar attack to what we are going to perform.},
author = {Swierczynski, Pawel and Fyrbiak, Marc and Koppe, Philipp and Paar, Christof},
doi = {10.1109/TCAD.2015.2399455},
issn = {02780070},
journal = {IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
keywords = {Advanced Encryption Standard (AES),Data Encryption Standard (DES),Field Programmable Gate Arrays (FPGAS),Trojans,bitstream manipulation,hardware security,reverse-engineering},
number = {8},
pages = {1236--1249},
publisher = {IEEE},
title = {{FPGA Trojans Through Detecting and Weakening of Cryptographic Primitives}},
volume = {34},
year = {2015}
}
